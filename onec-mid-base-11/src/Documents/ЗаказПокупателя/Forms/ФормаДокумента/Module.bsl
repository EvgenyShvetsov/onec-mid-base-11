
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// {{Швецов Евгений, Добавление поля "Согласованная скидка"
	ПолеСкидки = Элементы.Добавить("СогласованнаяСкидка",Тип("ПолеФормы"),Элементы.ГруппаШапкаЛево);
	ПолеСкидки.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСкидки.ПутьКДанным = "Объект.ДП_СогласованнаяСкидка";
	ПолеСкидки.УстановитьДействие("ПриИзменении", "ПриИзмененииСкидки");
	
	// Добавление кнопки пересчета таблич с учетом скидки.
	КомандаПересчета = Команды.Добавить("ПересчитатьТаблицы");
	КомандаПересчета.Заголовок = "Пересчитать таблицы";
	КомандаПересчета.Действие = "КомандаПересчитатьТаблицы";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьТаблицы",Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТаблицы";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	//}}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриИзмененииСкидки(Элемент)
	
	// {{Швецов Евгений, При изменении скидки вопрос "Пересчитать таблицы"
	//  Если таблицы формы пустые вопрос не возникает.
	Товары = Объект.Товары;
	Услуги = Объект.Услуги;
	
	Если Товары.Количество() <> 0 ИЛИ Услуги.Количество() <> 0 Тогда
			ВопросПересчетатьТаблицы();
	КонецЕсли;
	//}}
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВопросПересчетатьТаблицы()
	
	// {{Швецов Евгений, При изменении скидки вопрос "Пересчитать таблицы?
	Ответ = Ждать ВопросАсинх("Пересчитать таблицы?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПересчитатьТаблицыСУчетомСкидки();
	//}}
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицыСУчетомСкидки();
	
	// {{Швецов Евгений, Процедура пересчета таблиц с учетом скидки
	Товары = Объект.Товары;
	Для Каждого Строка Из Товары Цикл 
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	
	Услуги = Объект.Услуги;
	Для Каждого Строка Из Услуги Цикл 
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	//}
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПересчитатьТаблицы(Команда)
	
	// {{Швецов Евгений, Команда пересчета таблиц с учетом скидки
	ПересчитатьТаблицыСУчетомСкидки();
	//}}
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти